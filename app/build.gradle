apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "ie.mycit.weiliu.lshub"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    buildToolsVersion = '28.0.3'
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.1.0-alpha05'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation('com.mikepenz:materialdrawer:6.1.1@aar') {
        transitive = true
    }
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.annotation:annotation:1.0.2"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "com.google.android.material:material:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation 'com.github.d-max:spots-dialog:0.4@aar'
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.google.firebase:firebase-ml-vision:19.0.3'
    implementation 'com.google.firebase:firebase-ml-vision-face-model:17.0.2'


    // Cloudinary
    implementation "com.cloudinary:cloudinary-android:1.25.0"

    // Picasso
    implementation("com.squareup.picasso:picasso:2.71828") {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'exifinterface'
    }

    // Gson
    implementation "com.google.code.gson:gson:2.8.5"

    // Retrofit
    def retrofitVersion = '2.3.0'
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-scalars:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    // used to base on some backwards compatible themes
    // contains util classes to support various android versions, and clean up code
    // comes with the awesome "Holder"-Pattern
    // https://github.com/mikepenz/Materialize
    api 'com.mikepenz:materialize:1.2.0'

    // used to provide out of the box icon font support. simplifies development,
    // and provides scalable icons. the core is very very light
    // https://github.com/mikepenz/Android-Iconics
    api 'com.mikepenz:iconics-core:3.1.0'

    // used to fill the RecyclerView with the DrawerItems
    // and provides single and multi selection, expandable items
    // https://github.com/mikepenz/FastAdapter
    api 'com.mikepenz:fastadapter:3.3.0'
    api 'com.mikepenz:fastadapter-extensions-expandable:3.3.0'
    implementation 'com.github.bumptech.glide:glide:4.3.1'

    // the sample uses more advanced functions of the fastadapter
    // https://github.com/mikepenz/FastAdapter/
    implementation 'com.mikepenz:fastadapter-commons:3.3.0'
    // used to generate the Open Source section
    // https://github.com/mikepenz/AboutLibraries
    implementation 'com.mikepenz:aboutlibraries:6.2.0'

    //used to provide different itemAnimators for the RecyclerView
    //https://github.com/mikepenz/ItemAnimators
    implementation 'com.mikepenz:itemanimators:1.1.0'
    // used to provide the MiniDrawer to normal Drawer crossfade effect via a SlidingPane layout
    // --> https://github.com/mikepenz/MaterialDrawer/blob/develop/app/src/main/java/com/mikepenz/materialdrawer/app/MiniDrawerActivity.java
    // https://github.com/mikepenz/Crossfader
    implementation 'com.mikepenz:crossfader:1.6.0'
    // used to provide the two step crossfade DrawerLayout. Which allows to have a mini layout which transforms to a normal layout within the drawer
    // --> https://github.com/mikepenz/MaterialDrawer/blob/develop/app/src/main/java/com/mikepenz/materialdrawer/app/CrossfadeDrawerLayoutActvitiy.java
    // https://github.com/mikepenz/CrossfadeDrawerLayout
    implementation('com.mikepenz:crossfadedrawerlayout:1.1.0')
    implementation 'com.mikepenz:google-material-typeface:3.0.1.1.original@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.0.6.0@aar'
    implementation 'com.mikepenz:octicons-typeface:3.0.0.1@aar'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
}
